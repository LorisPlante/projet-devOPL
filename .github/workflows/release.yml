name: Create Release from package.json

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Read version from package.json
        id: get_version
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.PACKAGE_VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Log if tag exists
        run: |
          if [ "${{ env.TAG_EXISTS }}" = "true" ]; then
            echo "âœ… Tag v${{ env.PACKAGE_VERSION }} already exists. Skipping tag and release creation."
          else
            echo "ðŸš€ Tag v${{ env.PACKAGE_VERSION }} does not exist. Proceeding to create it."
          fi

      - name: Create Git Tag
        if: env.TAG_EXISTS == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.PACKAGE_VERSION }}
          git push origin v${{ env.PACKAGE_VERSION }}

      - name: Create Release
        if: env.TAG_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

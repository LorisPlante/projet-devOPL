name: Test and Analyze with SonarCloud

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  test-and-sonar:
    name: Run Tests and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 👈 Important pour que SonarCloud accède à la branche main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage (Vitest)
        run: npm run test:ci

      - name: Check test coverage minimum (90%)
        run: |
          node -e '
            const fs = require("fs");
            const path = "coverage/coverage-final.json";
            if (!fs.existsSync(path)) {
              console.error("❌ coverage-final.json not found.");
              process.exit(1);
            }
            const data = JSON.parse(fs.readFileSync(path, "utf8"));
            const files = Object.values(data).filter(f => f && typeof f === "object" && f.s);
            const totalStatements = files.reduce((acc, file) => {
              const statements = file.s || {};
              const covered = Object.values(statements).filter(Boolean).length;
              const total = Object.values(statements).length;
              return { covered: acc.covered + covered, total: acc.total + total };
            }, { covered: 0, total: 0 });

            const pct = (100 * totalStatements.covered / totalStatements.total).toFixed(2);
            console.log(`✅ Test Coverage: ${pct}%`);
            if (pct < 90) {
              console.error(`❌ Coverage (${pct}%) is below 90%`);
              process.exit(1);
            }
          '

      - name: Comment coverage on PR
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COVERAGE=$(node -e '
            const fs = require("fs");
            const path = "coverage/coverage-final.json";
            const data = JSON.parse(fs.readFileSync(path, "utf8"));
            const files = Object.values(data).filter(f => f && typeof f === "object" && f.s);
            const totalStatements = files.reduce((acc, file) => {
              const statements = file.s || {};
              const covered = Object.values(statements).filter(Boolean).length;
              const total = Object.values(statements).length;
              return { covered: acc.covered + covered, total: acc.total + total };
            }, { covered: 0, total: 0 });
            const pct = (100 * totalStatements.covered / totalStatements.total).toFixed(2);
            console.log(pct);
          ')
          echo "✅ Test Coverage: ${COVERAGE}%"
          gh pr comment "${{ github.event.pull_request.number }}" --body "✅ **Test Coverage:** ${COVERAGE}%"

      - name: Fix paths in lcov.info for SonarCloud
        run: |
          sed -i 's|SF:|SF:./|g' coverage/lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=lorisplante
            -Dsonar.projectKey=LorisPlante_projet-devOPL
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: SonarQube Analysis

on:
  pull_request:
    branches: [main]

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:9.9-community
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
        options: >-
          --name sonarqube
          --health-cmd "curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install -y jq

      - name: Wait for SonarQube to be ready
        run: |
          echo "⏳ Waiting for SonarQube to be GREEN..."
          for i in {1..60}; do
            STATUS=$(curl -s http://localhost:9000/api/system/health | jq -r .status)
            echo "SonarQube status: $STATUS"
            if [ "$STATUS" = "GREEN" ]; then
              echo "✅ SonarQube is ready"
              exit 0
            fi
            sleep 5
          done
          echo "❌ SonarQube did not become ready in time"
          docker logs sonarqube
          exit 1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Sonar packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
